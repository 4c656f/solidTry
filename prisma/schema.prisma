// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}
datasource prismaClient {
    provider = "mysql"
    url = env("DATABASE_URL")
}

model Post{
    id Int @id @default(autoincrement())
    title String
    link String @unique
    content String @prismaClient.LongText

    authorId Int
    author User @relation(fields: [authorId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    comments PostComment[]
    likes PostLike[]

}
model PostLike{
    id Int @id @default(autoincrement())

    postId Int
    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
    likeType Int @default(1)
    authorId Int
    author User @relation(fields: [authorId], references: [id], onDelete: Cascade)

    @@unique([authorId, postId])

}
model PostComment{
    id Int @id @default(autoincrement())

    postId Int
    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

    authorId Int
    author User @relation(fields: [authorId], references: [id], onDelete: Cascade)

    content String @prismaClient.MediumText

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

}

// Necessary for Next auth
model Account {
  id                Int  @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @prismaClient.Text
  access_token      String? @prismaClient.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @prismaClient.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model User {
  id            Int    @id @default(autoincrement())
  email         String?   @unique
  userName      String   @unique

  password      String?
  emailVerified DateTime?

  image         String @default("images/defaultAvatar.png")
  accounts      Account[]
  posts Post[]
  comments PostComment[]
  likes PostLike[]
}


